CREATE DATABASE book_repository;

CREATE SCHEMA book_storage;
DROP SCHEMA book_storage;

CREATE TABLE authors
(
    id         INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    first_name VARCHAR(128) NOT NULL,
    last_name  VARCHAR(128) NOT NULL
);

CREATE TABLE books
(
    id           INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name         VARCHAR(256) NOT NULL,
    year         INT          NOT NULL,
    pages_amount INT          NOT NULL,
    author_id    INT REFERENCES authors (id) ON DELETE CASCADE
);

DROP TABLE books;
DROP TABLE authors;

INSERT INTO authors (first_name, last_name)
VALUES ('George', 'Orwell'),
       ('Jane', 'Austen'),
       ('J.K.', 'Rowling'),
       ('Ernest', 'Hemingway'),
       ('F. Scott', 'Fitzgerald'),
       ('Agatha', 'Christie');

INSERT INTO books (name, year, pages_amount, author_id)
VALUES ('1984', 1949, 328, 1),
       ('Animal Farm', 1945, 112, 1),
       ('Pride and Prejudice', 1813, 279, 2),
       ('Emma', 1815, 474, 2),
       ('Harry Potter and the Philosopher''s Stone', 1997, 309, 3),
       ('Harry Potter and the Chamber of Secrets', 1998, 341, 3),
       ('The Old Man and the Sea', 1952, 127, 4),
       ('A Farewell to Arms', 1929, 332, 4),
       ('The Great Gatsby', 1925, 180, 5),
       ('Murder on the Orient Express', 1934, 256, 6),
       ('And Then There Were None', 1939, 272, 6);

SELECT name                                                                                      AS book_title,
       year                                                                                      AS publication_year,
       (SELECT concat(a.last_name, ', ', a.first_name) FROM authors AS a WHERE a.id = author_id) AS author_name
FROM books
ORDER BY year;



SELECT b.name                              AS book_title,
       b.year                              AS publication_year,
       a.last_name || ', ' || a.first_name AS author_name
FROM books AS b,
     authors AS a
WHERE b.author_id = a.id
ORDER BY year;

SELECT b.name                              AS book_title,
       b.year                              AS publication_year,
       a.last_name || ', ' || a.first_name AS author_name
FROM books AS b,
     authors AS a
WHERE b.author_id = a.id
ORDER BY year DESC;


SELECT count(*)
FROM books AS b
WHERE (SELECT a.id FROM authors AS a WHERE a.last_name = 'Rowling') = b.author_id;

SELECT *
FROM books
WHERE pages_amount > (SELECT avg(pages_amount) FROM books);

SELECT name,
       year,
       pages_amount,
       (SELECT avg(pages_amount)
        FROM (SELECT *
              FROM books
              ORDER BY year
              LIMIT 5) AS temp)
FROM (SELECT *
      FROM books
      ORDER BY year
      LIMIT 5) AS temp;

--WITH generuje tymczasowa tabele z ktorej robie sie SELECT
WITH oldest_books AS (SELECT *
                      FROM books
                      ORDER BY year
                      LIMIT 5)
SELECT name,
       year,
       pages_amount,
       (SELECT AVG(pages_amount) FROM oldest_books) AS avg_pages
FROM oldest_books;